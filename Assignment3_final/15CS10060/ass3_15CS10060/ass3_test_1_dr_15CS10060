 RULE:	type_specifiers 	->	  VOID
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
 RULE:	direct_declarator 	->	 direct_declarator()
  RULE:	declarator 	->	 direct_declarator


   RULE:	type_specifiers 	->	 UNSIGNED 
  RULE:	type_specifiers 	->	 INT 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	declaration_specifiers_opt 	->	 declaration_specifiers
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item

   RULE:	type_specifiers 	->	 SIGNED  
  RULE:	type_specifiers 	->	 INT 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	declaration_specifiers_opt 	->	 declaration_specifiers
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
 RULE:	declarator 	->	 direct_declarator
 RULE:	init_declarator 	->	 declarator
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	type_specifiers 	->	 BOOL  
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item



   RULE:	type_specifiers 	->	 CHAR 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
  RULE:	pointer 	->	 *
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 pointer_opt direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	type_specifiers 	->	 CHAR 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
  RULE:	pointer 	->	 *
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 pointer_opt direct_declarator
 RULE : primary_expression 	->	 string_literal
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 
   RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	constant_expression 	->	 conditional_expression

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	labeled_statement 	->	 case constant_expression : statement
 RULE:	statement 	->	 labeled_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item

     RULE:	jump_statement 	->	 break;
 RULE:	statement 	->	 jump_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	constant_expression 	->	 conditional_expression

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	labeled_statement 	->	 case constant_expression : statement
 RULE:	statement 	->	 labeled_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

     RULE:	jump_statement 	->	 break;
 RULE:	statement 	->	 jump_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	constant_expression 	->	 conditional_expression

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	labeled_statement 	->	 case constant_expression : statement
 RULE:	statement 	->	 labeled_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

     RULE:	jump_statement 	->	 break;
 RULE:	statement 	->	 jump_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

  
     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	labeled_statement 	->	 default : statement
 RULE:	statement 	->	 labeled_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	compound_statement 	->	 { block_item_list } 
 RULE:	statement 	->	 compound_statement
 RULE:	selection_statement 	->	 switch(expression) statement
 RULE:	statement 	->	 selection_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE:	type_specifiers 	->	 FLOAT 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	type_specifiers 	->	 FLOAT 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
  RULE:	unary_operator 	->	 - 
RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	unary_expression 	->	 unary_operator cast_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE:	type_specifiers 	->	 SHORT 
  RULE:	type_specifiers 	->	 INT 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	declaration_specifiers_opt 	->	 declaration_specifiers
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE:	type_specifiers 	->	 CHAR 
  RULE:	declaration_specifiers_opt 	->	 empty
 RULE:	declaration_specifiers 	->	 type_specifiers declaration_specifiers_opt
 RULE:	direct_declarator 	->	 identifier
  RULE:	declarator 	->	 direct_declarator
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	initializer 	->	 assignment_expression 
 RULE:	init_declarator 	->	 declarator = initializer
 RULE:	init_declarator_list 	->	 init_declarator
 RULE:	declaration 	->	 declaration_specifiers init_declarator_list ; 
 RULE:	block_item 	->	 declaration
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression

    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 relational_expression < shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
primary_expression -	->	 (expression)
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 equality_expression != relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
primary_expression -	->	 (expression)
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 logical_and_expression && inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	unary_expression 	->	 ++ unary_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 
    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	postfix_expression 	->	 postfix_expression [ expression ]
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 relational_expression >= shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression

       RULE:	jump_statement 	->	 continue;
 RULE:	statement 	->	 jump_statement

    
       RULE:	jump_statement 	->	 break;
 RULE:	statement 	->	 jump_statement
 RULE:	selection_statement 	->	 if(expression) statement else statement
 RULE:	statement 	->	 selection_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	compound_statement 	->	 { block_item_list } 
 RULE:	statement 	->	 compound_statement
 RULE:	iteration_statement 	->	 for(expression;expression;expression)
 RULE:	statement 	->	 iteration_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


    
     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item

   RULE:	compound_statement 	->	 { block_item_list } 
 RULE:	statement 	->	 compound_statement
 RULE:	iteration_statement 	->	 for(;;)
 RULE:	statement 	->	 iteration_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 equality_expression == relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 multiplicative_expression % cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement

    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 relational_expression >= shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression

     RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 %= 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement


   RULE:	selection_statement 	->	 if(expression) statement
 RULE:	statement 	->	 selection_statement
 RULE:	selection_statement 	->	 if(expression) statement else statement
 RULE:	statement 	->	 selection_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 additive_expression - multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   
    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	postfix_expression 	->	 postfix_expression ++
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item

    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	postfix_expression 	->	 postfix_expression --
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 += 
RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

    RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	postfix_expression 	->	 postfix_expression --
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	compound_statement 	->	 { block_item_list } 
 RULE:	statement 	->	 compound_statement
  RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 equality_expression != relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 equality_expression != relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
primary_expression -	->	 (expression)
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_or_expression || logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	iteration_statement 	->	 do statement while (expression)
 RULE:	statement 	->	 iteration_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item
 RULE:	expression_statement 	->	 ; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 additive_expression + multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 multiplicative_expression * cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 multiplicative_expression / cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 multiplicative_expression / cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 -= 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 /= 
 RULE : primary_expression 	->		 constant
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item


   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 exclusive_or_expression ^ and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 = 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
  RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 inclusive_or | exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 ^= 
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 |=  
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	assignment_operator 	->	 &=  
 RULE : primary_expression 	->		 identifier
RULE:	 postfix_expression 	->	primary_expression
 RULE:	unary_expression 	->	 postfix_expression
 RULE:	cast_expression 	->	 unary_expression
 RULE:	multiplicative_expression 	->	 cast_expression
 RULE:	additive_expression 	->	 multiplicative_expression
 RULE:	shift_expression 	->	 additive_expression
 RULE:	relational_expression 	->	 shift_expression
 RULE:	equality_expression 	->	 relational_expression
 RULE:	and_expression 	->	 equality_expression
 RULE:	exclusive_or_expression 	->	 and_expression
 RULE:	inclusive_or_expression 	->	 exclusive_or_expression
 RULE:	logical_and_expression 	->	 inclusive_or_expression
 RULE:	logical_or_expression 	->	 logical_and_expression
 RULE:	conditional_expression 	->	 logical_or_expression
 RULE:	assignment_expression 	->	 conditional_expression
 RULE:	assignment_expression 	->	 unary_expression assignment_operator assignment_expression
 RULE:	expression 	->	 assignment_expression
 RULE:	expression_statement 	->	 expression; RULE:	statement 	->	 expression_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

   RULE:	jump_statement 	->	 return;
 RULE:	statement 	->	 jump_statement
 RULE:	block_item 	->	 statement
 RULE:	block_item_list 	->	 block_item_list block_item

 RULE:	compound_statement 	->	 { block_item_list } 
 RULE:	function_definition 	->	 declaration_specifiers declarator compound_statement
 RULE:	external_decalaration 	->	 function_definition
 RULE:	translation_unit 	->	 external_decalaration
